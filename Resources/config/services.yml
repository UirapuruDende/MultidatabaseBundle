parameters:
  standardfixtures: []
  tenantfixtures:
    - "src/TPN/MainBundle/DataFixtures/ORM"

services:
  dende.multidatabase.database_switcher:
    class: Dende\MultidatabaseBundle\Listener\DatabaseSwitcher
    arguments:
      - @=service(parameter('dende_multidatabase.connection_name'))
      - @=service(parameter('dende_multidatabase.tenant_provider'))
    tags:
        - { name: kernel.event_listener, method: onKernelRequest, event: kernel.request, priority: 255 }

#  dende.multidatabase.collector.db_connections:
#    class: Dende\MultidatabaseBundle\DataCollector\DatabaseConnectionsDataCollector
#    arguments: [@doctrine.dbal.default_connection, @=service(parameter('dende_multidatabase.connection_name'))]
#    tags:
#      - { name: data_collector, template: "DendeMultidatabaseBundle:Toolbar:DatabaseConnections.html.twig", id: "database_connections" }

  dende.multidatabase.slugify:
    class: Dende\MultidatabaseBundle\Services\Slugify

  dende.multidatabase.database_worker:
    class: Dende\MultidatabaseBundle\Services\DatabaseWorker
    arguments:
#      - "%club_database_name_template%"
      - "%database_user%"
      - "%database_password%"
    calls:
      - [setSlugifier, [@dende.multidatabase.slugify]]
      - [setDefaultConnection, [@doctrine.dbal.default_connection]]
      - [setClubConnection, [@=service(parameter('dende_multidatabase.connection_name'))]]
      - [setDefaultEntityManager, [@doctrine.orm.default_entity_manager]]
      - [setClubEntityManager, [@=service(parameter('tenant_entity_manager'))]]

  dende.multidatabase.club_connection_command_listener:
      class: Dende\MultidatabaseBundle\Listener\ClubConnectionCommandListener
      calls:
        - [setClubRepository, [@=service(parameter('tenant_entity_repository'))]]
        - [setConnectionWrapper, [@=service(parameter('dende_multidatabase.connection_name'))]]
        - [setSchemaManager, ["@=service('doctrine.dbal.default_connection').getSchemaManager()"]]
      tags:
        - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: 255 }

  dende.multidatabase.doctrine_fixtures_load_listener:
      class: Dende\MultidatabaseBundle\Listener\DoctrineFixturesLoadListener
      calls:
        - [setOptions, [{default: %standardFixtures%, tenant: %tenantfixtures% }]]
      tags:
        - { name: kernel.event_listener, event: console.command, method: onConsoleCommand }

  dende.multidatabase.command:
    abstract: true
    class: Dende\MultidatabaseBundle\Command\AbstractCommand
    calls:
      - [setDatabaseWorker, [@dende.multidatabase.database_worker]]

  dende.multidatabase.command.create_database:
    class: Dende\MultidatabaseBundle\Command\CreateClubDatabaseCommand
    tags:
      - { name: console.command }

  dende.multidatabase.command.assign_user_to_club:
    class: Dende\MultidatabaseBundle\Command\AssignUserToClubCommand
    tags:
      - { name: console.command }

  dende.multidatabase.command.migrations.migrate:
    class: Dende\MultidatabaseBundle\Command\MigrationsMigrateCommand
    parent: dende.multidatabase.command
    tags:
      - { name: console.command }

  dende.multidatabase.command.migrations.generate:
    class: Dende\MultidatabaseBundle\Command\MigrationsGenerateCommand
    parent: dende.multidatabase.command
    tags:
      - { name: console.command }
