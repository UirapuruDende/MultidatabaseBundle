parameters:
  tenant_entity_manager: doctrine.orm.default_entity_manager
  tenant_entity_repository: dende.tenant.repository
  tenant_connection: doctrine.dbal.tenant_connection
  tenant_entity_class: "Dende\MultidatabaseBundle\Entity\Tenant"
  subdomain_provider_service: gst.subdomain_provider

  standardfixtures: []
  tenantfixtures:
    - "src/TPN/MainBundle/DataFixtures/ORM"

services:

#  dende.subdomain_name_lister:
#    class: Dende\MultidatabaseBundle\Listener\SubdomainListener
#    arguments:
#      - @=service(parameter('subdomain_provider_service'))
#    tags:
#      - {name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

  dende.subdomain_provider:
    class: Dende\MultidatabaseBundle\Services\SubdomainProvider
    arguments:
      - @request_stack
      - %base_url%

  gst.subdomain_provider:
    class: Dende\MultidatabaseBundle\Services\GetStreetTeamSubdomainProvider
    arguments:
      - @request_stack
      - %base_url%

#  dende.tenant.entity_manager:
#    class: Dende\MultidatabaseBundle\EntityManager\TenantManager
#    arguments:
#      - @doctrine.orm.default_entity_manager
#      - @event_dispatcher

  dende.tenant.repository:
    class: Dende\MultidatabaseBundle\Entity\TenantRepository
    factory_method: getRepository
    factory_service: doctrine.orm.default_entity_manager
    arguments: [%tenant_entity_class%]

  dende.multidatabase.database_switcher:
    class: Dende\MultidatabaseBundle\Listener\DatabaseSwitcher
#    scope: request
    arguments:
      - @=service(parameter('subdomain_provider_service'))
      - @doctrine.orm.entity_manager
      - @=service(parameter('tenant_connection'))
    tags:
        - { name: kernel.event_listener, method: onKernelRequest, event: kernel.request, priority: 255 }

  dende.multidatabase.credentials_storage:
    class: Dende\MultidatabaseBundle\Services\CredentialsStorage

  dende.multidatabase.collector.db_connections:
    class: Dende\MultidatabaseBundle\DataCollector\DatabaseConnectionsDataCollector
    arguments: [@doctrine.dbal.default_connection, @=service(parameter('tenant_connection'))]
    tags:
      - { name: data_collector, template: "DendeMultidatabaseBundle:Toolbar:DatabaseConnections.html.twig", id: "database_connections" }

  dende.multidatabase.slugify:
    class: Dende\MultidatabaseBundle\Services\Slugify

  dende.multidatabase.database_worker:
    class: Dende\MultidatabaseBundle\Services\DatabaseWorker
    arguments:
#      - "%club_database_name_template%"
      - "%database_user%"
      - "%database_password%"
    calls:
      - [setSlugifier, [@dende.multidatabase.slugify]]
      - [setDefaultConnection, [@doctrine.dbal.default_connection]]
      - [setClubConnection, [@=service(parameter('tenant_connection'))]]
      - [setDefaultEntityManager, [@doctrine.orm.default_entity_manager]]
      - [setClubEntityManager, [@=service(parameter('tenant_entity_manager'))]]

  dende.multidatabase.club_connection_command_listener:
      class: Dende\MultidatabaseBundle\Listener\ClubConnectionCommandListener
      calls:
        - [setClubRepository, [@=service(parameter('tenant_entity_repository'))]]
        - [setConnectionWrapper, [@=service(parameter('tenant_connection'))]]
        - [setSchemaManager, ["@=service('doctrine.dbal.default_connection').getSchemaManager()"]]
      tags:
        - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: 255 }

  dende.multidatabase.doctrine_fixtures_load_listener:
      class: Dende\MultidatabaseBundle\Listener\DoctrineFixturesLoadListener
      calls:
        - [setOptions, [{default: %standardFixtures%, tenant: %tenantfixtures% }]]
      tags:
        - { name: kernel.event_listener, event: console.command, method: onConsoleCommand }

  dende.multidatabase.command:
    abstract: true
    class: Dende\MultidatabaseBundle\Command\AbstractCommand
    calls:
      - [setDatabaseWorker, [@dende.multidatabase.database_worker]]

  dende.multidatabase.command.create_database:
    class: Dende\MultidatabaseBundle\Command\CreateClubDatabaseCommand
    tags:
      - { name: console.command }

  dende.multidatabase.command.assign_user_to_club:
    class: Dende\MultidatabaseBundle\Command\AssignUserToClubCommand
    tags:
      - { name: console.command }

  dende.multidatabase.command.migrations.migrate:
    class: Dende\MultidatabaseBundle\Command\MigrationsMigrateCommand
    parent: dende.multidatabase.command
    tags:
      - { name: console.command }

  dende.multidatabase.command.migrations.generate:
    class: Dende\MultidatabaseBundle\Command\MigrationsGenerateCommand
    parent: dende.multidatabase.command
    tags:
      - { name: console.command }

  dende.multidatabase.form.club_switch:
    class: Dende\MultidatabaseBundle\Form\ClubSwitchType
    arguments: [@security.context]
    tags:
      - { name: form.type, alias: gyman_default_clubswitch }

